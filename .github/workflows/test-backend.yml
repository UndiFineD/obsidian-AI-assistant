# GitHub Actions CI Configuration for Obsidian AI Assistant
# This workflow runs tests to prevent regression of the fixes implemented

name: Backend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov fastapi httpx
        # Install only testing dependencies, ML libs are mocked
        if [ -f requirements.txt ]; then
          # Install only non-ML dependencies for testing
          grep -v "torch\|transformers\|sentence-transformers\|llama-cpp\|vosk\|chromadb" requirements.txt | pip install -r /dev/stdin || true
        fi
    
    - name: Run backend tests
      run: |
        # Run the comprehensive backend test suite
        python -m pytest tests/backend/test_backend_comprehensive.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate coverage report
      run: |
        python -m pytest tests/backend/test_backend_comprehensive.py --cov=backend --cov-report=xml --cov-report=html
      continue-on-error: true
    
    - name: Upload coverage to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-python-${{ matrix.python-version }}
        path: htmlcov/
      if: always()

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Backend comprehensive tests completed" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“Š 28 test cases covering all major API endpoints" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ”§ ML libraries properly mocked for consistent testing" >> $GITHUB_STEP_SUMMARY
        echo "ðŸŽ¯ Target: 100% test pass rate maintained" >> $GITHUB_STEP_SUMMARY